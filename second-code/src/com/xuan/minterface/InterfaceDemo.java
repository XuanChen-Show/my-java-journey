package com.xuan.minterface;

/**
 * <p> 接口</p>
 *
 * @author : 轩辰;
 * @since 2023/05/30 22:58
 **/
public class InterfaceDemo {
    /**
     *  接口 : 体现的事项就是声明 【规则】
     *      如果一个类，所有的组成都是抽象方法
     *          - 没有成员变量
     *          - 没有普通方法
     *          这种类，我们通常会设计为Java中的都接口
     *  ------------------------------------------------
     *  接口的定义格式 :
     *      interface 接口吗 {}
     *
     *  接口和类之间是实现关系，通过 implements 关键字来完成
     *
     *          实现类规则 :
     *              1、重写所有抽象方法
     *              2、将实现类变成抽象类
     *              这两种方式必须选择一种，一般使用第一种，第二种基本不用
     *  -----------------------------------------------------------------
     *  接口的成员特点 :
     *      1、成员变量 : 只能定义常量，因为系统会默认加入三个关键字
     *                      public static final
     *                      - 这三个关键字没有顺序关系
     *      2、成员方法 : 只能是抽象方法，因为系统会默认加上两个关键字
     *                      public abstract
     *      3、构造方法 : 没有
     *  ------------------------------------------------------------------
     *  接口和类之间的各种关系 :
     *      1、类和类之间 : 继承关系，只支持单继承，不支持多继承，但是可以多层继承
     *      2、类和接口之间 : 实现关系，可以单实现，也可以多实现，甚至可以在继承一个类的同时，实现多个接口
     *      3、接口和接口之间 : 继承关系，可以单继承，也可以多继承
     */
    public static void main(String[] args) {
        //
    }

}
